# Declare project language.
language: php

php:
  - "7.2"

env:
  - WP_VERSION=4.2 WP_MULTISITE=0
  - WP_VERSION=4.2 WP_MULTISITE=1

# before_install:

# Use this to prepare your build for testing.
before_script:
  # Set up WordPress installation.
  - export WP_DEVELOP_DIR=/tmp/wordpress/
  - mkdir -p $WP_DEVELOP_DIR
  - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ $WP_DEVELOP_DIR
  - theme_slug=$(basename $(pwd))
  - theme_dir=$WP_DEVELOP_DIR/src/wp-content/themes/$theme_slug
  - cd ..
  - mv $theme_slug $theme_dir
  - cd $WP_DEVELOP_DIR
  - echo $WP_DEVELOP_DIR
  - cp wp-tests-config-sample.php wp-tests-config.php
  - sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php
  - sed -i "s/yourusernamehere/root/" wp-tests-config.php
  - sed -i "s/yourpasswordhere//" wp-tests-config.php
  - mysql -e 'CREATE DATABASE wordpress_test;' -uroot
  - git clone https://github.com/squizlabs/PHP_CodeSniffer.git php-codesniffer --depth=1
  - git clone https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git wordpress-coding-standards --depth=1
  - cd php-codesniffer
  - scripts/phpcs --config-set installed_paths ../wordpress-coding-standards
  - cd $theme_dir
  - phpenv rehash

# Run test script commands.
script:
  - find . \( -name '*.php' \) -exec php -lf {} \;
  - $WP_DEVELOP_DIR/php-codesniffer/scripts/phpcs -p -s -v -n . --standard=./codesniffer.ruleset.xml --extensions=php

notifications:
  email: false